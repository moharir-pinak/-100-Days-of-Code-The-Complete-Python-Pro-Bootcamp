headed to this website to solve the maze 
link :http://reeborg.ca/reeborg.html?lang=en&mode=python&menu=worlds%2Fmenus%2Freeborg_intro_en.json&name=Hurdle%204&url=worlds%2Ftutorial_en%2Fhurdle4.json

Code For Hurdel 1:


def turn_right():
    turn_left()
    turn_left()
    turn_left()
    
def jump():
    if wall_on_right():
        turn_left()
        if wall_in_front():
            turn_left()
            move()
        else:    
            move()
    elif right_is_clear() :
        turn_right() 
        move()
      
               
while at_goal() != True :
    if right_is_clear():
            turn_right()
            move()
     
    elif front_is_clear() != True :
        jump()    
    elif wall_in_front() != True :
        move()


Code For Hurdel 2:

def turn_right():
    turn_left()
    turn_left()
    turn_left()
    
def jump():
    if wall_on_right():
        turn_left()
        if wall_in_front():
            turn_left()
            move()
        else:    
            move()
    elif right_is_clear() :
        turn_right() 
        move()
      
               
while at_goal() != True :
    if right_is_clear():
            turn_right()
            move()
     
    elif front_is_clear() != True :
        jump()    
    elif wall_in_front() != True :
        move()

Code For Hurdel 3:

def turn_right():
    turn_left()
    turn_left()
    turn_left()
    
def jump():
    if wall_on_right():
        turn_left()
        if wall_in_front():
            turn_left()
            move()
        else:    
            move()
    elif right_is_clear() :
        turn_right() 
        move()
      
               
while at_goal() != True :
    if right_is_clear():
            turn_right()
            move()
     
    elif front_is_clear() != True :
        jump()    
    elif wall_in_front() != True :
        move()

Code For Hurdel 4:

def turn_right():
    turn_left()
    turn_left()
    turn_left()
    
def jump():
    if wall_on_right():
        turn_left()
        if wall_in_front():
            turn_left()
            move()
        else:    
            move()
    elif right_is_clear() :
        turn_right() 
        move()
      
               
while at_goal() != True :
    if right_is_clear():
            turn_right()
            move()
     
    elif front_is_clear() != True :
        jump()    
    elif wall_in_front() != True :
        move()

Final Challenge code  :
link : https://reeborg.ca/reeborg.html?lang=en&mode=python&menu=worlds%2Fmenus%2Freeborg_intro_en.json&name=Maze&url=worlds%2Ftutorial_en%2Fmaze1.json
there is an edge case debug it when got time 
code in the zip file provided or even the problem_world are the files in the zip use them to start debugging 
def turn_right():
    turn_left()
    turn_left()
    turn_left()
        
while not at_goal()  :
    if right_is_clear():
            turn_right()
            move()
    elif front_is_clear() == True :
        move() 
    else:
        turn_left()


